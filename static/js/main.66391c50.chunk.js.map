{"version":3,"sources":["components/data.js","components/ProjectsList.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["repos","title","subtitle","description","image","livelink","codelink","ProjectsList","className","map","repo","index","Card","CardImg","top","width","src","alt","CardBody","CardTitle","tag","CardSubtitle","CardText","Button","type","href","target","About","props","Jumbotron","color","App","fluid","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAEaA,G,iBAAQ,CACjB,CACIC,MAAO,UACPC,SAAU,aACVC,YAAa,sOACbC,MAAO,0CACPC,SAAU,4CACVC,SAAU,6CAEd,CACIL,MAAO,iBACPC,SAAU,sBACVC,YAAa,qJACbC,MAAO,yBACPC,SAAU,GACVC,SAAU,6CAEd,CACIL,MAAO,cACPC,SAAU,aACVC,YAAa,oSACbC,MAAO,yBACPC,SAAU,mCACVC,SAAU,iDAEd,CACIL,MAAO,WACPC,SAAU,+BACVC,YAAa,0EACbC,MAAO,yBACPC,SAAU,+CACVC,SAAU,gDAEd,CACIL,MAAO,6BACPC,SAAU,uBACVC,YAAa,qFACbC,MAAO,yBACPC,SAAU,yCACVC,SAAU,0CAEd,CACIL,MAAO,iBACPC,SAAU,kBACVC,YAAa,8DACbC,MAAO,yBACPC,SAAU,GACVC,SAAU,6C,+DCKHC,EA7CM,WACjB,OACA,qBAAKC,UAAU,oBAAf,SACKR,EAAMS,KAAI,SAACC,EAAMC,GAChB,OACE,eAACC,EAAA,EAAD,CAAkBJ,UAAU,wDAA5B,UACI,cAACK,EAAA,EAAD,CAASL,UAAU,YAAYM,KAAG,EAACC,MAAM,OAAOC,IAAKN,EAAKN,MAAOa,IAAI,KACrE,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,SAAqBV,EAAKT,QAC1B,cAACoB,EAAA,EAAD,CAAcD,IAAI,KAAKZ,UAAU,kBAAjC,SAAoDE,EAAKR,WACzD,cAACoB,EAAA,EAAD,CAAUF,IAAI,KAAd,SAAoBV,EAAKP,cACzB,cAACoB,EAAA,EAAD,CAAQC,KAAK,SAAShB,UAAU,mBAAmBiB,KAAMf,EAAKL,SAAUqB,OAAO,QAA/E,kBACA,cAACH,EAAA,EAAD,CAAQC,KAAK,SAAShB,UAAU,mBAAmBiB,KAAMf,EAAKJ,SAAUoB,OAAO,QAA/E,uBAPGf,S,QCiBRgB,EA7BD,SAACC,GACb,OACE,gCACE,uBACE,uBACF,eAACC,EAAA,EAAD,CAAWrB,UAAU,aAArB,UAEE,mBAAGA,UAAU,OAAb,iJACA,mBAAGA,UAAU,OAAb,SACE,cAACe,EAAA,EAAD,CAAQO,MAAM,UAAUL,KAAK,kDAA7B,wBAEF,oBAAIjB,UAAU,SACd,uBACA,8BACE,4CACA,6FAEF,2EAGA,uBACA,uBACA,8BACE,gD,cCGKuB,MAlBf,WACE,OACE,sBAAKvB,UAAU,MAAf,UACE,wBAAQwB,OAAK,EAAb,SACE,sDAEH,uBAAMxB,UAAU,OAAhB,UACE,cAAC,EAAD,IAGA,cAACyB,EAAA,EAAD,UACC,cAAC,EAAD,aCTOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.66391c50.chunk.js","sourcesContent":["\n\nexport const repos = [\n    {\n        title: 'Animals',\n        subtitle: 'MERN stack',\n        description: 'Animals is a website that features funny animals. The API with animals was  first created in and fetched from Contentful but then relocated to the MongoDB server. The app was built using React, SCSS, Reactstrap and React-Router',\n        image: 'https://unsplash.com/photos/Uk3t05ndSng',\n        livelink: 'https://joldon.github.io/animal_frontend/',\n        codelink: 'https://github.com/Joldon/animal_frontend',\n    },\n    {\n        title: 'Animals Server',\n        subtitle: 'Node.js and Express',\n        description: 'This is a server that hosts the animals database from the (Amazing Animals) website. This backend app was built with Node.js, Express, and MongoDB',\n        image: '../assets/worldmap.jpg',\n        livelink: '',\n        codelink: 'https://github.com/Joldon/animals_backend',\n    },\n    {\n        title: 'Map Stories',\n        subtitle: 'MERN stack',\n        description: 'This app visualizes geographical data on violent conflicts and climate-induced migration using React, Mapbox, Reactstrap, D3 projection and other map libraries. The conflicts page fetches an external API data from the Uppsala Conflict Data Program (UCDP) with more than 250000 case entries',\n        image: '../assets/worldmap.jpg',\n        livelink: 'https://map-stories.netlify.app/',\n        codelink: 'https://github.com/Joshchae/platform_frontend',\n    },\n    {\n        title: 'Cookbook',\n        subtitle: 'CSS/Bootstrap and JavaScript',\n        description: 'A simple Italian pasta recipe website with a sleek design and animation',\n        image: '../assets/worldmap.jpg',\n        livelink: 'https://hangingpulse.github.io/WBS-cookbook/',\n        codelink: 'https://github.com/hangingpulse/WBS-cookbook',\n    },\n    {\n        title: 'Autoquartett - a card game',\n        subtitle: 'React and Contentful',\n        description: 'An entertaining card game with characters created with and fetched from Contentful',\n        image: '../assets/worldmap.jpg',\n        livelink: 'https://joldon.github.io/autoquartett/',\n        codelink: 'https://github.com/Joldon/autoquartett',\n    },\n    {\n        title: 'To-Do List App',\n        subtitle: 'React and Hooks',\n        description: 'A To-Do list app that helps people to plan their daily life',\n        image: '../assets/worldmap.jpg',\n        livelink: '',\n        codelink: 'https://github.com/sa9er/To-Do-List-App',\n    },\n];","import React from 'react'\n// import Projects from './Projects'\nimport { repos } from './data'\nimport '../App.css'\nimport {\n    Card, Button, CardImg, CardTitle, CardText,\n    CardSubtitle, CardBody\n  } from 'reactstrap';\n\nconst ProjectsList = () => {\n    return (\n    <div className='ProjectsList mb-5'>\n        {repos.map((repo, index) => {\n          return (\n            <Card key={index} className=\"Project text-white bg-dark color-light border-success\">\n                <CardImg className=\"img-fluid\" top width=\"100%\" src={repo.image} alt='' />\n                <CardBody>\n                    <CardTitle tag=\"h4\">{repo.title}</CardTitle>\n                    <CardSubtitle tag=\"h5\" className=\"mb-2 text-muted\">{repo.subtitle}</CardSubtitle>\n                    <CardText tag='h6'>{repo.description}</CardText>\n                    <Button type='button' className='Live btn me-md-2' href={repo.livelink} target='blank'>live</Button>\n                    <Button type='button' className='Code btn ms-md-2' href={repo.codelink} target='blank'>code</Button>\n                </CardBody>\n            </Card>\n          );\n        })}\n\n      {/* {repos.map((repo) => (\n        <a\n          href={repo.link}\n          key={repo.image}\n          >\n            <div>\n              <img\n              alt='gallery'\n              src={repo.image} \n              />\n            </div>\n              <div>\n                <h2>\n                  {repo.subtitle}\n                </h2>\n                <h1>\n                  {repo.title}\n                </h1>\n                <p>{repo.description}</p>\n              </div>\n            <Projects />\n        </a>\n      ))} */}\n    </div>\n    )\n}\n\nexport default ProjectsList\n","import React from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\nconst About = (props) => {\n  return (\n    <div>\n      <br />\n        <br />\n      <Jumbotron className='text-white'>\n        {/* <h1 className=\"display-5\">Hi! I am Joldon</h1> */}\n        <p className=\"lead\">I am a full stack web developer with a professional background in political science and a research-oriented and analytical mindset.</p>\n        <p className=\"lead\">\n          <Button color=\"primary\" href=\"https://www.linkedin.com/in/joldon-kutmanaliev/\">LinkedIn</Button>\n        </p>\n        <hr className=\"my-2\" />\n        <br/>\n        <p>\n          <h3>Tech Stack</h3>\n          <h5>JavaScript, React, Node JS, Express, Mongo DB, CSS, HTML</h5>\n        </p>\n        <p>I develop projects using the MERN stack</p>\n        \n        </Jumbotron>\n        <br />\n        <br />\n        <div>\n          <h1>Projects</h1>\n        </div>\n    </div>\n  );\n};\n\nexport default About;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport './App.css';\nimport ProjectsList from './components/ProjectsList';\n// import Header from './components/Header';\nimport About from './components/About'\nimport{ Container } from 'reactstrap'\n// import Skills from './components/Skills'\nimport './custom.scss'\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header fluid>\n        <h2>JOLDON KUTMANALIEV</h2>\n      </header>\n     <main className=\"mb-0\">\n       <About />\n       \n     {/* <Skills /> */}\n       <Container>\n        <ProjectsList />\n       </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import './custom.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}